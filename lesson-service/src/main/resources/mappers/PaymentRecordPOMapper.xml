<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lijiaqi.lijin.dao.PaymentRecordPOMapper">
  <resultMap id="BaseResultMap" type="com.lijiaqi.lijin.po.PaymentRecordPO">
    <id column="payment_id" jdbcType="VARCHAR" property="paymentId" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="pay_money" jdbcType="DOUBLE" property="payMoney" />
    <result column="pay_date" jdbcType="TIMESTAMP" property="payDate" />
    <result column="pay_lesson_number" jdbcType="INTEGER" property="payLessonNumber" />
    <result column="next_pay_date" jdbcType="DATE" property="nextPayDate" />
    <result column="created_date_time" jdbcType="TIMESTAMP" property="createdDateTime" />
    <result column="updated_date_time" jdbcType="TIMESTAMP" property="updatedDateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    payment_id, student_id, pay_money, pay_date, pay_lesson_number, next_pay_date, created_date_time,
    updated_date_time
  </sql>
  <select id="selectByExample" parameterType="com.lijiaqi.lijin.po.PaymentRecordPOCriterion" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from payment_record
    where payment_id = #{paymentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from payment_record
    where payment_id = #{paymentId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lijiaqi.lijin.po.PaymentRecordPO">
    insert into payment_record (payment_id, student_id, pay_money,
      pay_date, pay_lesson_number, next_pay_date,
      created_date_time, updated_date_time)
    values (#{paymentId,jdbcType=VARCHAR}, #{studentId,jdbcType=VARCHAR}, #{payMoney,jdbcType=DOUBLE},
      #{payDate,jdbcType=TIMESTAMP}, #{payLessonNumber,jdbcType=INTEGER}, #{nextPayDate,jdbcType=DATE},
      #{createdDateTime,jdbcType=TIMESTAMP}, #{updatedDateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lijiaqi.lijin.po.PaymentRecordPO">
    insert into payment_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        payment_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="payMoney != null">
        pay_money,
      </if>
      <if test="payDate != null">
        pay_date,
      </if>
      <if test="payLessonNumber != null">
        pay_lesson_number,
      </if>
      <if test="nextPayDate != null">
        next_pay_date,
      </if>
      <if test="createdDateTime != null">
        created_date_time,
      </if>
      <if test="updatedDateTime != null">
        updated_date_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="payMoney != null">
        #{payMoney,jdbcType=DOUBLE},
      </if>
      <if test="payDate != null">
        #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payLessonNumber != null">
        #{payLessonNumber,jdbcType=INTEGER},
      </if>
      <if test="nextPayDate != null">
        #{nextPayDate,jdbcType=DATE},
      </if>
      <if test="createdDateTime != null">
        #{createdDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDateTime != null">
        #{updatedDateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lijiaqi.lijin.po.PaymentRecordPOCriterion" resultType="java.lang.Long">
    select count(*) from payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment_record
    <set>
      <if test="record.paymentId != null">
        payment_id = #{record.paymentId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.payMoney != null">
        pay_money = #{record.payMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.payDate != null">
        pay_date = #{record.payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payLessonNumber != null">
        pay_lesson_number = #{record.payLessonNumber,jdbcType=INTEGER},
      </if>
      <if test="record.nextPayDate != null">
        next_pay_date = #{record.nextPayDate,jdbcType=DATE},
      </if>
      <if test="record.createdDateTime != null">
        created_date_time = #{record.createdDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedDateTime != null">
        updated_date_time = #{record.updatedDateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment_record
    set payment_id = #{record.paymentId,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      pay_money = #{record.payMoney,jdbcType=DOUBLE},
      pay_date = #{record.payDate,jdbcType=TIMESTAMP},
      pay_lesson_number = #{record.payLessonNumber,jdbcType=INTEGER},
      next_pay_date = #{record.nextPayDate,jdbcType=DATE},
      created_date_time = #{record.createdDateTime,jdbcType=TIMESTAMP},
      updated_date_time = #{record.updatedDateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lijiaqi.lijin.po.PaymentRecordPO">
    update payment_record
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="payMoney != null">
        pay_money = #{payMoney,jdbcType=DOUBLE},
      </if>
      <if test="payDate != null">
        pay_date = #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payLessonNumber != null">
        pay_lesson_number = #{payLessonNumber,jdbcType=INTEGER},
      </if>
      <if test="nextPayDate != null">
        next_pay_date = #{nextPayDate,jdbcType=DATE},
      </if>
      <if test="createdDateTime != null">
        created_date_time = #{createdDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDateTime != null">
        updated_date_time = #{updatedDateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where payment_id = #{paymentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lijiaqi.lijin.po.PaymentRecordPO">
    update payment_record
    set student_id = #{studentId,jdbcType=VARCHAR},
      pay_money = #{payMoney,jdbcType=DOUBLE},
      pay_date = #{payDate,jdbcType=TIMESTAMP},
      pay_lesson_number = #{payLessonNumber,jdbcType=INTEGER},
      next_pay_date = #{nextPayDate,jdbcType=DATE},
      created_date_time = #{createdDateTime,jdbcType=TIMESTAMP},
      updated_date_time = #{updatedDateTime,jdbcType=TIMESTAMP}
    where payment_id = #{paymentId,jdbcType=VARCHAR}
  </update>
</mapper>
