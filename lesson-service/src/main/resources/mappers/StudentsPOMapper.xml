<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lijiaqi.lijin.dao.StudentsPOMapper">
  <resultMap id="BaseResultMap" type="com.lijiaqi.lijin.po.StudentsPO">
    <id column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="student_phone" jdbcType="VARCHAR" property="studentPhone" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="wechart_id" jdbcType="VARCHAR" property="wechartId" />
    <result column="parent_name" jdbcType="VARCHAR" property="parentName" />
    <result column="parent_phone" jdbcType="VARCHAR" property="parentPhone" />
    <result column="fee" jdbcType="DOUBLE" property="fee" />
    <result column="learn_times" jdbcType="INTEGER" property="learnTimes" />
    <result column="payment_times" jdbcType="INTEGER" property="paymentTimes" />
    <result column="created_date_time" jdbcType="TIMESTAMP" property="createdDateTime" />
    <result column="updated_date_time" jdbcType="TIMESTAMP" property="updatedDateTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    student_id, student_name, student_phone, grade, wechart_id, parent_name, parent_phone,
    fee, learn_times, payment_times, created_date_time, updated_date_time, status
  </sql>
  <select id="selectByExample" parameterType="com.lijiaqi.lijin.po.StudentsPOCriterion" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from students
    where student_id = #{studentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from students
    where student_id = #{studentId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lijiaqi.lijin.po.StudentsPO">
    insert into students (student_id, student_name, student_phone,
      grade, wechart_id, parent_name,
      parent_phone, fee, learn_times,
      payment_times, created_date_time, updated_date_time,
      status)
    values (#{studentId,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, #{studentPhone,jdbcType=VARCHAR},
      #{grade,jdbcType=VARCHAR}, #{wechartId,jdbcType=VARCHAR}, #{parentName,jdbcType=VARCHAR},
      #{parentPhone,jdbcType=VARCHAR}, #{fee,jdbcType=DOUBLE}, #{learnTimes,jdbcType=INTEGER},
      #{paymentTimes,jdbcType=INTEGER}, #{createdDateTime,jdbcType=TIMESTAMP}, #{updatedDateTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lijiaqi.lijin.po.StudentsPO">
    insert into students
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="studentPhone != null">
        student_phone,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="wechartId != null">
        wechart_id,
      </if>
      <if test="parentName != null">
        parent_name,
      </if>
      <if test="parentPhone != null">
        parent_phone,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="learnTimes != null">
        learn_times,
      </if>
      <if test="paymentTimes != null">
        payment_times,
      </if>
      <if test="createdDateTime != null">
        created_date_time,
      </if>
      <if test="updatedDateTime != null">
        updated_date_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentPhone != null">
        #{studentPhone,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="wechartId != null">
        #{wechartId,jdbcType=VARCHAR},
      </if>
      <if test="parentName != null">
        #{parentName,jdbcType=VARCHAR},
      </if>
      <if test="parentPhone != null">
        #{parentPhone,jdbcType=VARCHAR},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DOUBLE},
      </if>
      <if test="learnTimes != null">
        #{learnTimes,jdbcType=INTEGER},
      </if>
      <if test="paymentTimes != null">
        #{paymentTimes,jdbcType=INTEGER},
      </if>
      <if test="createdDateTime != null">
        #{createdDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDateTime != null">
        #{updatedDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lijiaqi.lijin.po.StudentsPOCriterion" resultType="java.lang.Long">
    select count(*) from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update students
    <set>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentName != null">
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentPhone != null">
        student_phone = #{record.studentPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.wechartId != null">
        wechart_id = #{record.wechartId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentName != null">
        parent_name = #{record.parentName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentPhone != null">
        parent_phone = #{record.parentPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=DOUBLE},
      </if>
      <if test="record.learnTimes != null">
        learn_times = #{record.learnTimes,jdbcType=INTEGER},
      </if>
      <if test="record.paymentTimes != null">
        payment_times = #{record.paymentTimes,jdbcType=INTEGER},
      </if>
      <if test="record.createdDateTime != null">
        created_date_time = #{record.createdDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedDateTime != null">
        updated_date_time = #{record.updatedDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update students
    set student_id = #{record.studentId,jdbcType=VARCHAR},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      student_phone = #{record.studentPhone,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      wechart_id = #{record.wechartId,jdbcType=VARCHAR},
      parent_name = #{record.parentName,jdbcType=VARCHAR},
      parent_phone = #{record.parentPhone,jdbcType=VARCHAR},
      fee = #{record.fee,jdbcType=DOUBLE},
      learn_times = #{record.learnTimes,jdbcType=INTEGER},
      payment_times = #{record.paymentTimes,jdbcType=INTEGER},
      created_date_time = #{record.createdDateTime,jdbcType=TIMESTAMP},
      updated_date_time = #{record.updatedDateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lijiaqi.lijin.po.StudentsPO">
    update students
    <set>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentPhone != null">
        student_phone = #{studentPhone,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="wechartId != null">
        wechart_id = #{wechartId,jdbcType=VARCHAR},
      </if>
      <if test="parentName != null">
        parent_name = #{parentName,jdbcType=VARCHAR},
      </if>
      <if test="parentPhone != null">
        parent_phone = #{parentPhone,jdbcType=VARCHAR},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DOUBLE},
      </if>
      <if test="learnTimes != null">
        learn_times = #{learnTimes,jdbcType=INTEGER},
      </if>
      <if test="paymentTimes != null">
        payment_times = #{paymentTimes,jdbcType=INTEGER},
      </if>
      <if test="createdDateTime != null">
        created_date_time = #{createdDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDateTime != null">
        updated_date_time = #{updatedDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lijiaqi.lijin.po.StudentsPO">
    update students
    set student_name = #{studentName,jdbcType=VARCHAR},
      student_phone = #{studentPhone,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      wechart_id = #{wechartId,jdbcType=VARCHAR},
      parent_name = #{parentName,jdbcType=VARCHAR},
      parent_phone = #{parentPhone,jdbcType=VARCHAR},
      fee = #{fee,jdbcType=DOUBLE},
      learn_times = #{learnTimes,jdbcType=INTEGER},
      payment_times = #{paymentTimes,jdbcType=INTEGER},
      created_date_time = #{createdDateTime,jdbcType=TIMESTAMP},
      updated_date_time = #{updatedDateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
</mapper>
